<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Button Styles  -->

    <ControlTemplate x:Key="ButtonTemplate.Generic" TargetType="Button">
        <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
            <Border x:Name="StaticBorder"
                    Background="{TemplateBinding BorderBrush}"
                    BorderBrush="Transparent"
                    BorderThickness="0"
                    CornerRadius="{TemplateBinding Border.CornerRadius}" />

            <Border x:Name="StaticBackground"
                    Background="{TemplateBinding Background}"
                    BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}" />

            <Border x:Name="PressedBackground"
                    Background="{StaticResource Button.Pressed.Background}"
                    BorderBrush="{StaticResource Button.Pressed.Border}"
                    BorderThickness="{StaticResource Button.Pressed.BorderThickness}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    Visibility="Collapsed" />

            <Border x:Name="HoverBackground"
                    Background="{StaticResource Button.MouseOver.Background}"
                    BorderBrush="{StaticResource Button.MouseOver.Border}"
                    BorderThickness="{StaticResource Button.MouseOver.BorderThickness}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    Visibility="Collapsed" />

            <Border x:Name="DefaultedBackground"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    Visibility="Collapsed">
                <Rectangle Margin="1"
                           RadiusX="2"
                           RadiusY="2"
                           Stroke="{StaticResource BlackBrush50}"
                           StrokeDashArray="1 2"
                           StrokeThickness="1" />
            </Border>

            <ContentPresenter x:Name="ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              RenderOptions.ClearTypeHint="Enabled"
                              SnapsToDevicePixels="True"
                              UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDefaulted" Value="true" />
                    <Condition Property="IsMouseOver" Value="false" />
                    <Condition Property="IsPressed" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="DefaultedBackground" Property="Visibility" Value="Visible" />
            </MultiTrigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}" />
                <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}" />
                <Setter TargetName="HoverBackground" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="{StaticResource DisabledControl.Opacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonTemplate.Void" TargetType="Button">
        <Grid Background="Transparent">
            <ContentPresenter x:Name="ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="True"
                              UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource AccentBrush8}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Background}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonTemplate.Minimal" TargetType="Button">
        <Border Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding Border.CornerRadius}"
                Effect="{StaticResource PrimaryDropShadowEffect}">
            <ContentPresenter x:Name="ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="True"
                              UseLayoutRounding="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BlackBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="Opacity" Value="{StaticResource DisabledControl.Opacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonStyle.Default" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="Border.CornerRadius" Value="{StaticResource CornerRadius.Button}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="BorderThickness" Value="{StaticResource Button.Static.BorderThickness}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual.Button}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily.Global}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaption}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate.Generic}" />
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ButtonStyle.Void" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily.Global}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaption}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,6" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate.Void}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ButtonStyle.Link" TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=Button}}"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=Button}}"
                                   FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Text="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}" />
                        <Rectangle Height="1"
                                   Margin="0,2,0,0"
                                   Opacity="0.5"
                                   Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />

                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily.Global}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate.Void}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <DataTemplate x:Key="SingleIconTemplate">
        <Path x:Name="Icon"
              Data="{Binding Content, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
              Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
              SnapsToDevicePixels="True"
              Stretch="Uniform"
              UseLayoutRounding="True" />
    </DataTemplate>

    <DataTemplate x:Key="SingleImageTemplate">
        <Image SnapsToDevicePixels="True"
               Source="{Binding Content, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
               Stretch="Uniform"
               UseLayoutRounding="True" />
    </DataTemplate>

    <Style x:Key="ButtonStyle.SingleIcon" BasedOn="{StaticResource ButtonStyle.Void}" TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate" Value="{StaticResource SingleIconTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Padding" Value="3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle.SingleImage" BasedOn="{StaticResource ButtonStyle.Void}" TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate" Value="{StaticResource SingleImageTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <DataTemplate x:Key="TextTaggedUniformIconTemplate">
        <Grid x:Name="Grid"
              SnapsToDevicePixels="True"
              UseLayoutRounding="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Path x:Name="Icon"
                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                  Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                  Stretch="Uniform" />
            <TextBlock x:Name="Caption"
                       Grid.Row="1"
                       Margin="0,8,0,0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       TextAlignment="Center"
                       TextWrapping="Wrap" 
                       TextTrimming="None"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="{x:Null}">
                <Setter TargetName="Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="{x:Null}">
                <Setter TargetName="Caption" Property="Margin" Value="0" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="TextTaggedUniformIconHorizontalTemplate">
        <Grid x:Name="Grid"
              SnapsToDevicePixels="True"
              UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Path x:Name="Icon"
                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                  Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                  Stretch="Uniform" />
            <TextBlock x:Name="Caption"
                       Grid.Column="1"
                       Margin="16,0,0,0"
                       VerticalAlignment="Center"
                       FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                       Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ButtonBase}}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="{x:Null}">
                <Setter TargetName="Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource AncestorType=ButtonBase}}" Value="{x:Null}">
                <Setter TargetName="Caption" Property="Margin" Value="0" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="TextTaggedImageTemplate">
        <Grid x:Name="Grid"
              SnapsToDevicePixels="True"
              UseLayoutRounding="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Image x:Name="Icon"
                   Width="{Binding ActualHeight, ElementName=Grid}"
                   SnapsToDevicePixels="True"
                   Source="{Binding Tag, RelativeSource={RelativeSource AncestorType=Button}}"
                   Stretch="None"
                   UseLayoutRounding="True" />

            <TextBlock x:Name="Caption"
                       Grid.Row="1"
                       Margin="0,4,0,0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=Button}}"
                       FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=Button}}"
                       FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=Button}}"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                       Text="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}" Value="{x:Null}">
                <Setter TargetName="Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource AncestorType=Button}}" Value="{x:Null}">
                <Setter TargetName="Caption" Property="Margin" Value="0" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="RoundCornersButtonTemplate" TargetType="ButtonBase">
        <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
            <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="9" />
            <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}" />
            <ContentPresenter x:Name="ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              SnapsToDevicePixels="True"
                              UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                <!--
                <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                <Setter Property="BorderThickness" Value="{StaticResource Button.MouseOver.BorderThickness}" />
                <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}" /> -->
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                <Setter Property="BorderThickness" Value="{StaticResource Button.Pressed.BorderThickness}" />
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <!--<Setter Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="BorderThickness" Value="{StaticResource Button.Disabled.BorderThickness}" />
                <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}" />-->
                <!--<Setter TargetName="ContentPresenter" Property="Opacity" Value="{StaticResource DisabledControl.Opacity}" />-->
                <Setter Property="Opacity" Value="{StaticResource DisabledControl.Opacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RoundCornersButtonStyle" TargetType="ButtonBase">
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="Border.CornerRadius" Value="{StaticResource CornerRadius.Button}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="BorderThickness" Value="{StaticResource Button.Static.BorderThickness}" />
        <Setter Property="ContentTemplate" Value="{StaticResource TextTaggedUniformIconTemplate}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual.Button}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily.Global}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaption}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="Template" Value="{StaticResource RoundCornersButtonTemplate}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="RoundCornersButtonStyle.Horizontal" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="ButtonBase">
        <Setter Property="ContentTemplate" Value="{StaticResource TextTaggedUniformIconHorizontalTemplate}" />
    </Style>

    <Style x:Key="ButtonStyle.ManualOperation" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="Height" Value="256" />
        <Setter Property="Padding" Value="32" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.ManualOperation}" />
        <Setter Property="Width" Value="256" />
    </Style>

    <Style x:Key="ButtonStyle.AutomaticMode" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush4}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush4}" />
        <Setter Property="Content" Value="Automatic" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="Height" Value="256" />
        <Setter Property="Padding" Value="32" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Automatic}" />
        <Setter Property="Width" Value="256" />
    </Style>

    <Style x:Key="ButtonStyle.Settings" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Settings" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="32" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />
    </Style>

    <Style x:Key="ButtonStyle.SettingsSmall" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Settings" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaption}" />
        <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />-->
        <Setter Property="Padding" Value="8,16" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />
    </Style>

    <Style x:Key="ButtonStyle.SwitchOn" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="ON" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ExtraXLarge}" />
        <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />-->

        <Setter Property="Height" Value="160" />
        <!--<Setter Property="Padding" Value="32" />-->
        <Setter Property="Width" Value="160" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Bulb}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
            </MultiTrigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="OFF" />
                <Setter Property="Tag" Value="{StaticResource IconGeometry.BulbOff}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle.Activate" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="Padding" Value="32" />
        <!--<Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />-->
    </Style>

    <Style x:Key="ButtonStyle.Update" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        
        <!--<Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />-->
    </Style>


    <Style x:Key="ButtonStyle.SwitchOn2" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="EIN" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ExtraLarge}" />
        <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />-->

        <Setter Property="Height" Value="160" />
        <!--<Setter Property="Padding" Value="32" />-->
        <Setter Property="Width" Value="160" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Bulb}" />
    </Style>

    <Style x:Key="ButtonStyle.SwitchOff" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="AUS" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ExtraLarge}" />
        <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />-->

        <Setter Property="Height" Value="160" />
        <!--<Setter Property="Padding" Value="32" />-->
        <Setter Property="Width" Value="160" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.BulbOff}" />
    </Style>

    <Style x:Key="ButtonStyle.AlarmButton" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="Content" Value="OFF" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.Medium}" />
        <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />-->

        <Setter Property="Height" Value="160" />
        <!--<Setter Property="Padding" Value="32" />-->
        <Setter Property="Width" Value="160" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.WarningCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.OpenClamping" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionSmall}" />
        <!--<Setter Property="Padding" Value="32,8" />-->
        <!--<Setter Property="HorizontalContentAlignment" Value="Left" />-->
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <!--<Setter Property="Height" Value="48" />-->
    </Style>

    <Style x:Key="ButtonStyle.OpenGripper" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionSmall}" />
        <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />-->
        <!--<Setter Property="Padding" Value="32,8" />-->
        <!--<Setter Property="HorizontalContentAlignment" Value="Left" />-->
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />

        <!--<Setter Property="Height" Value="48" />-->
    </Style>

    <Style x:Key="ButtonStyle.MoveTable" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionSmall}" />
        <!--<Setter Property="Padding" Value="32,8" />-->
        <!--<Setter Property="HorizontalContentAlignment" Value="Left" />-->
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />

        <!--<Setter Property="Height" Value="48" />-->
    </Style>

    <Style x:Key="ButtonStyle.ParkBending" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionSmall}" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Gear}" />
    </Style>

    <Style x:Key="ButtonStyle.MoveGripper" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="Start" />
        <!-- <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" /> -->
        <Setter Property="Tag" Value="{StaticResource IconGeometry.RunCircle}" />
    </Style>


    <Style x:Key="ButtonStyle.AllProfile2" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Settings" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="32" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.ArrowForward}" />
    </Style>

    <Style x:Key="ButtonStyle.NewProfile" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="New Profile" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="24" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.PlusCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.Automatic" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush8}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush8}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionSmall}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="0,8" />
    </Style>

    <Style x:Key="ButtonStyle.AutomaticPause" BasedOn="{StaticResource ButtonStyle.Automatic}" TargetType="Button">
        <Setter Property="Content" Value="Pause" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.PauseCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.AutomaticRun" BasedOn="{StaticResource ButtonStyle.Automatic}" TargetType="Button">
        <Setter Property="Content" Value="Run" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.RunCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.AutomaticStop" BasedOn="{StaticResource ButtonStyle.Automatic}" TargetType="Button">
        <Setter Property="Content" Value="Stop" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.StopCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.CheckUpdates" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Check for updates" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style x:Key="ButtonStyle.SelectFolder" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Select Folder" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="24,16" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Search}" />
    </Style>

    <Style x:Key="ButtonStyle.Delete" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="Content" Value="Delete" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="24,16" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Trash}" />
    </Style>

    <Style x:Key="ButtonStyle.Copy" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="Copy" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="24,16" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.CopyProfile}" />
    </Style>

    <Style x:Key="ButtonStyle.TopHeader" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="MinWidth" Value="208" />
        <Setter Property="Padding" Value="24,16" />
    </Style>

    <Style x:Key="ButtonStyle.ExitSoftware" BasedOn="{StaticResource ButtonStyle.TopHeader}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush4}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush4}" />
        <Setter Property="Content" Value="Exit Software" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Cross}" />
    </Style>

    <Style x:Key="ButtonStyle.Shutdown" BasedOn="{StaticResource ButtonStyle.TopHeader}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="Content" Value="Shut Down" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Shutdown}" />
    </Style>

    <Style x:Key="ButtonStyle.Login" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource WhiteBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Padding" Value="32,16" />


        <!--<Setter Property="Tag" Value="{StaticResource IconGeometry.Shutdown}" />-->
    </Style>

    <Style x:Key="ButtonStyle.CreateNew" BasedOn="{StaticResource ButtonStyle.TopHeader}" TargetType="Button">
        <Setter Property="Content" Value="Create New" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.NewProfile}" />
    </Style>

    <Style x:Key="ButtonStyle.CopyProfile" BasedOn="{StaticResource ButtonStyle.TopHeader}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Copy Profile" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaption}" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.CopyProfile}" />
    </Style>

    <Style x:Key="ButtonStyle.ColorUp" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="MinHeight" Value="64" />
        <Setter Property="Padding" Value="24,16" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.ArrowUp}" />
    </Style>

    <Style x:Key="ButtonStyle.ColorDown" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="MinHeight" Value="64" />
        <Setter Property="Padding" Value="24,8" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.ArrowDown}" />
    </Style>

    <Style x:Key="ButtonStyle.AddMaterial" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="MinHeight" Value="64" />
        <Setter Property="Padding" Value="24,8" />
        <!--<Setter Property="Tag" Value="{StaticResource IconGeometry.PlusCircle}" />-->
    </Style>

    <Style x:Key="ButtonStyle.DeleteProfile" BasedOn="{StaticResource RoundCornersButtonStyle.Horizontal}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="Content" Value="Delete Profile" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaption}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="24,16" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.Trash}" />
    </Style>

    <Style x:Key="ButtonStyle.Dashboard.Run" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="Run" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.RunCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.Dashboard.Pause" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush4}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush4}" />
        <Setter Property="Content" Value="Pause" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.PauseCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.Dashboard.Resume" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="Resume" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.RunCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.Dashboard.Simulation" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Simulation" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.3D}" />
    </Style>

    <Style x:Key="ButtonStyle.Dashboard.EditProfile" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Edit Profile" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.EditProfile}" />
    </Style>

    <Style x:Key="ButtonStyle.EditProfileSmall" BasedOn="{StaticResource ButtonStyle.Dashboard.EditProfile}" TargetType="Button">
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionSmall}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <Style x:Key="ButtonStyle.ProfileOptions" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="64" />
        <Setter Property="Width" Value="256" />
    </Style>

    <Style x:Key="ButtonStyle.ProfileOptions.Back" BasedOn="{StaticResource ButtonStyle.ProfileOptions}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush2}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="Content" Value="Back" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.BackCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.ProfileOptions.Edit" BasedOn="{StaticResource ButtonStyle.ProfileOptions}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Content" Value="Edit Profile" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.EditProfile}" />
    </Style>

    <Style x:Key="ButtonStyle.ProfileOptions.Run" BasedOn="{StaticResource ButtonStyle.ProfileOptions}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush3}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush3}" />
        <Setter Property="Content" Value="Run Profile" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.RunCircle}" />
    </Style>

    <Style x:Key="ButtonStyle.NavigateBack" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush.BackButton}" />
        <Setter Property="Border.CornerRadius" Value="{StaticResource CornerRadius.Button}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush50}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Content" Value="{StaticResource IconGeometry.ArrowLeft}" />
        <Setter Property="ContentTemplate" Value="{StaticResource SingleIconTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="Template" Value="{StaticResource RoundCornersButtonTemplate}" />
    </Style>

    <Style x:Key="ButtonStyle.CloseKeyboard" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush.BackButton}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush50}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Content" Value="{StaticResource IconGeometry.Cross}" />
        <Setter Property="ContentTemplate" Value="{StaticResource SingleIconTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Template" Value="{StaticResource RoundCornersButtonTemplate}" />
    </Style>

    <Style x:Key="ButtonStyle.SimulationSmall" BasedOn="{StaticResource ButtonStyle.Dashboard.Simulation}" TargetType="Button">
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionSmall}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <Style x:Key="ButtonStyle.SimulationDrafting" BasedOn="{StaticResource ButtonStyle.Dashboard.Simulation}" TargetType="Button">
        <Setter Property="Border.CornerRadius" Value="0,4,0,0" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.SmallValue}" />
        <Setter Property="Height" Value="92" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Width" Value="96" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource AccentBrush9}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                <Setter Property="BorderThickness" Value="{StaticResource Button.Pressed.BorderThickness}" />
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle.ProfileEditor" BasedOn="{StaticResource ButtonStyle.SingleIcon}" TargetType="Button">
        <Setter Property="Content" Value="{StaticResource IconGeometry.ArrowForward}" />
        <Setter Property="Padding" Value="8" />
    </Style>

    <Style x:Key="ButtonStyle.AllProfiles" BasedOn="{StaticResource RoundCornersButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="Caption"
                                   Margin="0,0,16,0"
                                   VerticalAlignment="Center"
                                   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=Button}}"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=Button}}"
                                   FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Text="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}" />
                        <Path x:Name="Icon"
                              Width="24"
                              VerticalAlignment="Center"
                              Data="{Binding Tag, RelativeSource={RelativeSource AncestorType=Button}}"
                              Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                              Stretch="Uniform" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaptionLarge}" />
        <Setter Property="Padding" Value="32" />
        <Setter Property="Tag" Value="{StaticResource IconGeometry.ArrowForward}" />
    </Style>

    <Style x:Key="ButtonStyle.ThreeDots" BasedOn="{StaticResource ButtonStyle.SingleIcon}" TargetType="Button">
        <Setter Property="Content" Value="{StaticResource IconGeometry.ThreeDots}" />
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
        <Setter Property="Padding" Value="16" />
    </Style>

    <Style x:Key="ButtonStyle.FavoriteStar" BasedOn="{StaticResource ButtonStyle.SingleIcon}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{StaticResource IconGeometry.Star}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.SilverLight}" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Width" Value="64" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFavorite}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentBrush4}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle.Breadcrumb" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Border.CornerRadius" Value="{StaticResource CornerRadius.Button}" />
        <Setter Property="ContentTemplate" Value="{StaticResource TextTaggedUniformIconHorizontalTemplate}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual.Button}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily.Global}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize.ButtonCaption}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <!--<Setter Property="HorizontalContentAlignment" Value="Center" />-->
        <Setter Property="Padding" Value="12" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate.Minimal}" />
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
        <!--<Setter Property="VerticalContentAlignment" Value="Center" />-->
    </Style>

    <Style x:Key="ButtonStyle.StorageBreadcrumb" BasedOn="{StaticResource ButtonStyle.Breadcrumb}" TargetType="Button">
        <Setter Property="Content" Value="{Binding SelectedStorageType.Icon}" />
        <Setter Property="ContentTemplate" Value="{StaticResource SingleIconTemplate}" />
        <Setter Property="Padding" Value="6" />
    </Style>

    <Style x:Key="ButtonStyle.FilesLayoutVertical" BasedOn="{StaticResource ButtonStyle.Breadcrumb}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{StaticResource IconGeometry.FilesLayoutVertical}" />
        <Setter Property="ContentTemplate" Value="{StaticResource SingleIconTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
        <Setter Property="Padding" Value="14" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFilesLayoutVertical}" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle.FilesLayoutHorizontal" BasedOn="{StaticResource ButtonStyle.Breadcrumb}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{StaticResource IconGeometry.FilesLayoutHorizontal}" />
        <Setter Property="ContentTemplate" Value="{StaticResource SingleIconTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
        <Setter Property="Padding" Value="12" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFilesLayoutVertical}" Value="False">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle.DraftingCommand" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush9}" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path x:Name="Icon"
                          Data="{Binding Content, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                          Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                          SnapsToDevicePixels="True"
                          Stretch="None"
                          UseLayoutRounding="True" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Margin" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Ellipse Effect="{StaticResource DraftingButtonShadowEffect}"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{Binding BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="True"
                                          UseLayoutRounding="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource AccentBrush9}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Width" Value="64" />
    </Style>

    <Style x:Key="ButtonStyle.DraftingTool" BasedOn="{StaticResource ButtonStyle.DraftingCommand}" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />

    </Style>



</ResourceDictionary>